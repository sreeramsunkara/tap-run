#@ load("@ytt:data", "data")

---
apiVersion: v1
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZRVENDQkNtZ0F3SUJBZ0lTQkxaMXBmQXNuRUlXbkx5dkFMdmN1R1dDTUEwR0NTcUdTSWIzRFFFQkN3VUEKTURJeEN6QUpCZ05WQkFZVEFsVlRNUll3RkFZRFZRUUtFdzFNWlhRbmN5QkZibU55ZVhCME1Rc3dDUVlEVlFRRApFd0pTTXpBZUZ3MHlNakF4TVRBeU1UVTBNamxhRncweU1qQTBNVEF5TVRVME1qaGFNQll4RkRBU0JnTlZCQU1UCkMzUmhibnAxTkhVdWJtVjBNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXRTeVcKYzV1SjMxd21kT2MwemNlQTZId3o0S3QyZ0ltcmZtL2VlMkM3M3NuNm1CN1A1cXBEWWxXd29EWTZzNkExZGthSQp4Tm95NFd3MGZQQXFzS2tMSWQrdlJVR2ZETERScnZYYnQxSXpoYkJlcS9wdEQ1YTVMbENNMWNEeFVBYVg4NHErCkpiWjIyZnBFRGtCODVPc1dTSlp2YWhBdTNFRHBodnRvQzBjbjQ5d2hkTEduRkxoTTZPTkhpS0hTRUNYelBmbW0KLy9sc1lJa3U2dkh3RUN0aXU4SVQ5eGxsOXhLREN5Slp1TTJwMEQ5QnMvVDVHMkpSMTA4SDZCYi8wMjNIQXZJYgpNUnBRRVpGUkVQRXVZT0wvRDVOV2hxN3hwR213MXJzQ1ZiYy9CV3lBMUJZQUQwK01mVzY2Ky9vWXpNZjkvZnJoCjZ5c1YwVG5RWmxKU3ZZTTBud0lEQVFBQm80SUNhekNDQW1jd0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWQKSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1CMEdBMVVkRGdRVwpCQlRTOHcyWUYzdGpiMG9OVlFkM280aTZVaU1QdlRBZkJnTlZIU01FR0RBV2dCUVVMck1YdDFoV3k2NVFDVURtCkg2K2RpeFRDeGpCVkJnZ3JCZ0VGQlFjQkFRUkpNRWN3SVFZSUt3WUJCUVVITUFHR0ZXaDBkSEE2THk5eU15NXYKTG14bGJtTnlMbTl5WnpBaUJnZ3JCZ0VGQlFjd0FvWVdhSFIwY0RvdkwzSXpMbWt1YkdWdVkzSXViM0puTHpBNgpCZ05WSFJFRU16QXhnaEVxTG5SaGNDNTBZVzU2ZFRSMUxtNWxkSUlMZEdGdWVuVTBkUzV1WlhTQ0QzUmhjQzUwCllXNTZkVFIxTG01bGREQk1CZ05WSFNBRVJUQkRNQWdHQm1lQkRBRUNBVEEzQmdzckJnRUVBWUxmRXdFQkFUQW8KTUNZR0NDc0dBUVVGQndJQkZocG9kSFJ3T2k4dlkzQnpMbXhsZEhObGJtTnllWEIwTG05eVp6Q0NBUVVHQ2lzRwpBUVFCMW5rQ0JBSUVnZllFZ2ZNQThRQjJBQ2w1dnZDZU9Ua2g4Rlp6bjJPbGQrVytWMzJjWUFyNCtVMWRKbHdsClhjZUVBQUFCZmtZek9lWUFBQVFEQUVjd1JRSWdLcWJ1Tm1yZHJKQVRRWWQ0VzY1bmhYWHlldGNXOWpjbXhhR0EKc20zOXZhY0NJUURmaWc2Um5lNmhreHFQWEFhbzgvVkpsZ2F4WEUrczY5MjhVMlBoU2FMS0R3QjNBRzlUZHF3eAo4REVaMkprQXBGRVYvM2NWSEJIWkFzRUFLUWFOc2dpYU45a1RBQUFCZmtZek9pRUFBQVFEQUVnd1JnSWhBTjRZCitLRUFOVHQ5L2RCR1l2VUcxcUNsV2x0djBTV0hMS2xBbWVNUW43MWZBaUVBK2xSOVlGd0EyekhqeWxSd2h3QXIKMFNpdmkrb0N2djhVMHY4Y3kydlVsMGd3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUM0aWpjb0VscWNyRGVuRgprOXU2ait5QnBuODJaZVBhMmUyRUQ1N1JSek04ZGhZdlAzdUVCU2creTFSbkV3eGNRWnRseGx1UkJsd2t6TnZTCkVoS3MrS2d6WUYvRHIxcEx6QnpxeGZIUGwxRC9NYmpWM2RPZ2tqcVVlZytZVkEwdFFQUllUeGg0ZWg4SlIyNXcKd252K29uNTBHSXBpOWN3Tmc0eEppWHZEQTE0dTBaeHFheWlxV1BPTGJTTitxYzVCUnBuRXl5bm9xSnBlRDRSSAozM2llQjY0UGg3dE5qa09iaVM2bm5BSjRaKzdlKzV0RXQ1WWErckRiSnAxbjA4eVp2dkhxSUNnNnZOWXRtY2tRCktsaExQNDlyOS94cG9sZDBIVzVHdmtLc2N1T0NOeGNrbmJiRWtUZWhKRmJZbzZubitMak5oaFFlOFZBWGhhU3cKMHFwYXRZND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRkZqQ0NBdjZnQXdJQkFnSVJBSkVyQ0VyUERCaW5VL2JXTGlXblgxb3dEUVlKS29aSWh2Y05BUUVMQlFBdwpUekVMTUFrR0ExVUVCaE1DVlZNeEtUQW5CZ05WQkFvVElFbHVkR1Z5Ym1WMElGTmxZM1Z5YVhSNUlGSmxjMlZoCmNtTm9JRWR5YjNWd01SVXdFd1lEVlFRREV3eEpVMUpISUZKdmIzUWdXREV3SGhjTk1qQXdPVEEwTURBd01EQXcKV2hjTk1qVXdPVEUxTVRZd01EQXdXakF5TVFzd0NRWURWUVFHRXdKVlV6RVdNQlFHQTFVRUNoTU5UR1YwSjNNZwpSVzVqY25sd2RERUxNQWtHQTFVRUF4TUNVak13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUM3QWhVb3pQYWdsTk1QRXV5TlZaTEQrSUx4bWFaNlFvaW5YU2FxdFN1NXhVeXhyNDVyK1hYSW85Y1AKUjVRVVZUVlhqSjZvb2prWjlZSThRcWxPYnZVN3d5N2JqY0N3WFBOWk9PZnR6Mm53V2dzYnZzQ1VKQ1dIK2pkeApzeFBuSEt6aG0rL2I1RHRGVWtXV3FjRlR6alRJVXU2MXJ1MlAzbUJ3NHFWVXE3WnREcGVsUURScks5TzhadXRtCk5IejZhNHVQVnltWitEQVhYYnB5Yi91QnhhM1NobGc5RjhmbkNidnhLL2VHM01IYWNWM1VSdVBNclNYQmlMeGcKWjNWbXMvRVk5NkpjNWxQL09vaTJSNlgvRXhqcW1BbDNQNTFUK2M4QjVmV21jQmNVcjJPay81bXprNTNjVTZjRwova2lGSGFGcHJpVjF1eFBNVWdQMTdWR2hpOXNWQWdNQkFBR2pnZ0VJTUlJQkJEQU9CZ05WSFE4QkFmOEVCQU1DCkFZWXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0lHQ0NzR0FRVUZCd01CTUJJR0ExVWRFd0VCL3dRSU1BWUIKQWY4Q0FRQXdIUVlEVlIwT0JCWUVGQlF1c3hlM1dGYkxybEFKUU9ZZnI1MkxGTUxHTUI4R0ExVWRJd1FZTUJhQQpGSG0wV2VaN3R1WGtBWE9BQ0lqSUdsajI2WnR1TURJR0NDc0dBUVVGQndFQkJDWXdKREFpQmdnckJnRUZCUWN3CkFvWVdhSFIwY0RvdkwzZ3hMbWt1YkdWdVkzSXViM0puTHpBbkJnTlZIUjhFSURBZU1CeWdHcUFZaGhab2RIUncKT2k4dmVERXVZeTVzWlc1amNpNXZjbWN2TUNJR0ExVWRJQVFiTUJrd0NBWUdaNEVNQVFJQk1BMEdDeXNHQVFRQgpndDhUQVFFQk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQ0FRQ0Z5azVIUHFQM2hVU0Z2TlZuZUxLWVk2MTFUUjZXClBUTmxjbFF0Z2FEcXcrMzRJTDlmekxkd0FMZHVPL1plbE43a0lKK203NHV5QStlaXRSWThrYzYwN1RrQzUzd2wKaWtmbVpXNC9SdlRaOE02VUsrNVV6aEs4akNkTHVNR1lMNkt2elhHUlNnaTN5TGdqZXdRdENQa0lWejZEMlFRegpDa2NoZUFtQ0o4TXF5SnU1emx6eVpNakF2bm5BVDQ1dFJBeGVrcnN1OTRzUTRlZ2RSQ25iV1NEdFk3a2grQkltCmxKTlhvQjFsQk1FS0lxNFFEVU9Yb1JnZmZ1RGdoamUxV3JHOU1MK0hiaXNxL3lGT0d3WEQ5UmlYOEY2c3c2VzQKYXZBdXZEc3p1ZTVMM3N6ODVLK0VDNFkvd0ZWRE52Wm80VFlYYW82WjBmK2xRS2MwdDhEUVl6azFPWFZ1OHJwMgp5Sk1DNmFsTGJCZk9EQUxadllIN243ZG8xQVpsczRJOWQxUDRqbmtEclFveEIzVXFROWhWbDNMRUtRNzN4RjFPCnlLNUdoRERYOG9WZkdLRjV1K2RlY0lzSDRZYVR3N21QM0dGeEpTcXYzKzBsVUZKb2k1TGM1ZGExNDlwOTBJZHMKaENFeHJvTDErN21yeUlrWFBlRk01VGdPOXIwcnZaYUJGT3ZWMnowZ3AzNVowK0w0V1BsYnVFak4vbHhQRmluKwpIbFVqcjhnUnNJM3FmSk9RRnkvOXJLSUpSMFkvOE9td3QvOG9UV2d5MW1kZUhtbWprN2oxbllzdkM5SlNRNlp2Ck1sZGxUVEtCM3poVGhWMStYV1lwNnJqZDVKVzF6YlZXRWtMTnhFN0dKVGhFVUczc3pnQlZHUDdwU1dUVVRzcVgKbkxSYndIT29xN2hId2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlGWURDQ0JFaWdBd0lCQWdJUVFBRjNJVGZVNlVLNDduYXFQR1FLdHpBTkJna3Foa2lHOXcwQkFRc0ZBREEvCk1TUXdJZ1lEVlFRS0V4dEVhV2RwZEdGc0lGTnBaMjVoZEhWeVpTQlVjblZ6ZENCRGJ5NHhGekFWQmdOVkJBTVQKRGtSVFZDQlNiMjkwSUVOQklGZ3pNQjRYRFRJeE1ERXlNREU1TVRRd00xb1hEVEkwTURrek1ERTRNVFF3TTFvdwpUekVMTUFrR0ExVUVCaE1DVlZNeEtUQW5CZ05WQkFvVElFbHVkR1Z5Ym1WMElGTmxZM1Z5YVhSNUlGSmxjMlZoCmNtTm9JRWR5YjNWd01SVXdFd1lEVlFRREV3eEpVMUpISUZKdmIzUWdXREV3Z2dJaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUNEd0F3Z2dJS0FvSUNBUUN0NkNSejlCUTM4NXVlSzFjb0hJZSszTGZmT0pDTWJqem1WNkI0OTNYQwpvdjcxYW03MkFFOG8yOTVvaG14RWs3YXhZLzBVRW11L0g5THFNWnNoZnRFelBMcEk5ZDE1MzdPNC94THhJWnBMCndZcUdjV2xLWm1ac2ozNDhjTCt0S1NJRzgrVEE1b0N1NGt1UHQ1bCtsQU9mMDBlWGZKbElJMVBvT0s1UENtK0QKTHRGSlY0eUFkTGJhTDlBNGpYc0RjQ0ViZGZJd1BQcVBydDNhWTZ2ckZrL0NqaEZMZnM4TDZQKzFkeTcwc250Swo0RXdTSlF4d2pRTXBvT0ZUSk93VDJlNFp2eEN6U293L2lhTmhVZDZzaHdlVTlHTng3QzdpYjF1WWdlR0pYRFI1CmJIYnZPNUJpZWViYnBKb3ZKc1hRRU9FTzN0a1FqaGI3dC9lbzk4ZmxBZ2VZanpZSWxlZmlONVlOTm5XZSt3NXkKc1IyYnZBUDVTUVhZZ2QwRnRDcldRZW1zQVhhVkNnL1kzOVc5RWg4MUx5Z1hiTktZd2FnSlpIZHVSemU2enF4WgpYbWlkZjNMV2ljVUdRU2srV1Q3ZEp2VWt5UkduV3FOTVFCOUdvWm0xcHpwUmJvWTdubjF5cHhJRmVGbnRQbEY0CkZRc0RqNDNRTHdXeVBudEtIRXR6QlJMOHh1cmdVQk44UTVOMHM4cDA1NDRmQVFqUU1OUmJjVGEwQjdyQk1EQmMKU0xlQ081aW1mV0NLb3FNcGdzeTZ2WU1FRzZLREEwR2gxZ1h4RzhLMjhLaDhoanRHcUVncWlOeDJtbmEvSDJxbApQUm1QNnpqelpON0lLdzBLS1AvMzIrSVZRdFFpMENkZDRYbitHT2R3aUsxTzV0bUxPc2JkSjFGdS83eGs5VE5EClR3SURBUUFCbzRJQlJqQ0NBVUl3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFPQmdOVkhROEJBZjhFQkFNQ0FRWXcKU3dZSUt3WUJCUVVIQVFFRVB6QTlNRHNHQ0NzR0FRVUZCekFDaGk5b2RIUndPaTh2WVhCd2N5NXBaR1Z1ZEhKMQpjM1F1WTI5dEwzSnZiM1J6TDJSemRISnZiM1JqWVhnekxuQTNZekFmQmdOVkhTTUVHREFXZ0JURXA3R2tleXh4Cit0dmhTNUIxLzhRVllJV0pFREJVQmdOVkhTQUVUVEJMTUFnR0JtZUJEQUVDQVRBL0Jnc3JCZ0VFQVlMZkV3RUIKQVRBd01DNEdDQ3NHQVFVRkJ3SUJGaUpvZEhSd09pOHZZM0J6TG5KdmIzUXRlREV1YkdWMGMyVnVZM0o1Y0hRdQpiM0puTUR3R0ExVWRId1ExTURNd01hQXZvQzJHSzJoMGRIQTZMeTlqY213dWFXUmxiblJ5ZFhOMExtTnZiUzlFClUxUlNUMDlVUTBGWU0wTlNUQzVqY213d0hRWURWUjBPQkJZRUZIbTBXZVo3dHVYa0FYT0FDSWpJR2xqMjZadHUKTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBS2N3QnNsbTcvRGxMUXJ0Mk01MW9HclMrbzQ0Ky95UW9ERlZEQwo1V3hDdTIrYjlMUlB3a1NJQ0hYTTZ3ZWJGR0p1ZU43c0o3bzVYUFdpb1c1V2xIQVFVN0c3NUsvUW9zTXJBZFNXCjlNVWdOVFA1MkdFMjRIR050TGkxcW9KRmxjRHlxU01vNTlhaHkyY0kycUJETEtvYmt4L0ozdldyYVYwVDlWdUcKV0NMS1RWWGtjR2R0d2xmRlJqbEJ6NHBZZzFodG1mNVg2RFlPOEE0anF2MklsOURqWEE2VVNiVzFGelhTTHI5TwpoZThZNElXUzZ3WTdiQ2tqQ1dEY1JRSk1FaGc3NmZzTzN0eEUrRmlZcnVxOVJVV2hpRjFteXY0UTZXK0N5QkZDCkRmdnA3T09HQU42ZEVPTTQrcVI5c2Rqb1NZS0VCcHNyNkd0UEFRdzRkeTc1M2VjNQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2d0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktrd2dnU2xBZ0VBQW9JQkFRQzFMSlp6bTRuZlhDWjAKNXpUTng0RG9mRFBncTNhQWlhdCtiOTU3WUx2ZXlmcVlIcy9tcWtOaVZiQ2dOanF6b0RWMlJvakUyakxoYkRSOAo4Q3F3cVFzaDM2OUZRWjhNc05HdTlkdTNVak9Gc0Y2cittMFBscmt1VUl6VndQRlFCcGZ6aXI0bHRuYlora1FPClFIems2eFpJbG05cUVDN2NRT21HKzJnTFJ5ZmozQ0Ywc2FjVXVFem80MGVJb2RJUUpmTTkrYWIvK1d4Z2lTN3EKOGZBUUsySzd3aFAzR1dYM0VvTUxJbG00emFuUVAwR3o5UGtiWWxIWFR3Zm9Gdi9UYmNjQzhoc3hHbEFSa1ZFUQo4UzVnNHY4UGsxYUdydkdrYWJEV3V3SlZ0ejhGYklEVUZnQVBUNHg5YnJyNytoak14LzM5K3VIckt4WFJPZEJtClVsSzlnelNmQWdNQkFBRUNnZ0VCQUlPdDZaZ1RGMjFaVzdZaUNaWDdCKzF4d0g3dUFJNUNBWHcvTU5RNXBiS3kKMk1sUnM4ZXlQcEd0T0ZmcHNsYTEvY1YrVkkvSEM2NGQ2RFJhbHB5WjhMWnBEc25tZlFSTFM4dS9kRGRVcm8vZgpkWi9IdnhiU2RMdDkzaTdLTWxuNHdONUpIQlRxL28xRndjc2VBZWljR1RFZTdkR0grNWNvTXROaHpPaE5pbWVvCmNKb21BRkRrbkJpUk5TU2k3d3E1UHBNanpXUytrQm5VcHpaZ1I2T0N3NjJra1FnY2ZvWXgwRXlsM2xjNUdEVDkKdXNtblRiTjEvS3gvbExCN2sxcUY3anV4dHNjejZMQlNOcXoydVhwcGR3RkVPRlRqblMvUkNCNUJma1k4dW00dwo3Mk5xYjRFcW1xZGdGaUY5c3dCa0JaRTl1czd6Y0RvRElNQkk2MmNLT1lrQ2dZRUE1VEdaaXh0MjVaOGl0RDg4ClAvdk1XSUY0RW1uT2VTOGRxWmQ5d0FvejVUWUgzQXhMYVpkcDZxTDc2WGtodDlPLzRTWFRDcktRemJHQmppdXEKdUtmdFBtbHQ5NVFHVUpibUQ0MzBJVzdvRXRqdnpqV3BqTzRTNCtnenFoa2kvUlhjOE1WNWZiK05qc3NBUTFVMApYZWk5Ym1sZkkyRlVHQTR3TklRVXlwQ3lQYVVDZ1lFQXlsMDE3SkVBdGltR2l6blUvclF2RXpPNE91YVBCR2tjCmNsZm10MjE5L1ZzMElqWXRtVXc5TEk1R2dmcDcvZ2tLdEhnc0VpZndwa2N0SytuOFpPUFZKUHlaYjNmNjZvWG0KN0R3V1A3WVpQNVBjeEZPazRtcnlDU2Z3dlZ1ZkxpQkhLb1dFSHMwRGQvVzhvVnY0MS9NbmJWZ1FXbG1oUUYxYwp2SWFhVVZSTEhmTUNnWUVBMWNaVnVQSjlDK0JLdG1UbEJha1BDTjU1NkhMWUt5QlBRb2dTdXJUSmd0bktxdXlzCnltaDRXbXA3SFdIbW1WZmdlVmlXYUR2MTVHWFV1WTd4UmhzYnBrTWdWdlN5anlpd25ZR0NYRXplR2ZaT2RzQ0cKelBTaW1nRlRieXpTL2MwT3IyVUIxTkIrY05uWC9QWFVTbU56alRDcmxJeUxxNFJRWWl0d1dTQnRvQ0VDZ1lCWgpUZzFRR3lYUFBrQXNEUmVjVi9RMmF5cXdnN00xNVJVeXVPd09vdmxvNStqMytDVGpkQ3ZERC82NXVjc2lidWNVCmdid2hQeE1Lcm5xVzJLb1Q5Qi9LTk5lWnc3OHQ1RzNtYnhYNmcraGNrR3ByRWViQUxTWW5PRU1icmVWdnU3cnMKWHdQUmUvUTk2bXFXWXpwTVF2aHhYdDNJb2FseCtFSEd5VGd0RUNBZVZRS0JnUUMvc1p5QVZQL2YzVHNNOVBnNgpvQWJjanc3bml4VXoyV0UwUEVkUXlIUlhIdmltZWRQQjdoWUtUeUxsL3JIaTExc2tRakh5Q1E2OEpISWxCK3VLCkZWaUdRRThsUnI3cXYwQ3pLbEd0QTUzVFJYNzNCbUg5NWx1SmtrU1UxSnJvU2RpVmZWUVFvdVVXUjFpU1VaY3MKTGluSm0vMlh0QlJWbEE5K0YzQ3hEYVJqVGc9PQotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  name: tls
  namespace: learningcenter
type: kubernetes.io/tls
---
apiVersion: v1
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZRVENDQkNtZ0F3SUJBZ0lTQkxaMXBmQXNuRUlXbkx5dkFMdmN1R1dDTUEwR0NTcUdTSWIzRFFFQkN3VUEKTURJeEN6QUpCZ05WQkFZVEFsVlRNUll3RkFZRFZRUUtFdzFNWlhRbmN5QkZibU55ZVhCME1Rc3dDUVlEVlFRRApFd0pTTXpBZUZ3MHlNakF4TVRBeU1UVTBNamxhRncweU1qQTBNVEF5TVRVME1qaGFNQll4RkRBU0JnTlZCQU1UCkMzUmhibnAxTkhVdWJtVjBNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXRTeVcKYzV1SjMxd21kT2MwemNlQTZId3o0S3QyZ0ltcmZtL2VlMkM3M3NuNm1CN1A1cXBEWWxXd29EWTZzNkExZGthSQp4Tm95NFd3MGZQQXFzS2tMSWQrdlJVR2ZETERScnZYYnQxSXpoYkJlcS9wdEQ1YTVMbENNMWNEeFVBYVg4NHErCkpiWjIyZnBFRGtCODVPc1dTSlp2YWhBdTNFRHBodnRvQzBjbjQ5d2hkTEduRkxoTTZPTkhpS0hTRUNYelBmbW0KLy9sc1lJa3U2dkh3RUN0aXU4SVQ5eGxsOXhLREN5Slp1TTJwMEQ5QnMvVDVHMkpSMTA4SDZCYi8wMjNIQXZJYgpNUnBRRVpGUkVQRXVZT0wvRDVOV2hxN3hwR213MXJzQ1ZiYy9CV3lBMUJZQUQwK01mVzY2Ky9vWXpNZjkvZnJoCjZ5c1YwVG5RWmxKU3ZZTTBud0lEQVFBQm80SUNhekNDQW1jd0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWQKSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1CMEdBMVVkRGdRVwpCQlRTOHcyWUYzdGpiMG9OVlFkM280aTZVaU1QdlRBZkJnTlZIU01FR0RBV2dCUVVMck1YdDFoV3k2NVFDVURtCkg2K2RpeFRDeGpCVkJnZ3JCZ0VGQlFjQkFRUkpNRWN3SVFZSUt3WUJCUVVITUFHR0ZXaDBkSEE2THk5eU15NXYKTG14bGJtTnlMbTl5WnpBaUJnZ3JCZ0VGQlFjd0FvWVdhSFIwY0RvdkwzSXpMbWt1YkdWdVkzSXViM0puTHpBNgpCZ05WSFJFRU16QXhnaEVxTG5SaGNDNTBZVzU2ZFRSMUxtNWxkSUlMZEdGdWVuVTBkUzV1WlhTQ0QzUmhjQzUwCllXNTZkVFIxTG01bGREQk1CZ05WSFNBRVJUQkRNQWdHQm1lQkRBRUNBVEEzQmdzckJnRUVBWUxmRXdFQkFUQW8KTUNZR0NDc0dBUVVGQndJQkZocG9kSFJ3T2k4dlkzQnpMbXhsZEhObGJtTnllWEIwTG05eVp6Q0NBUVVHQ2lzRwpBUVFCMW5rQ0JBSUVnZllFZ2ZNQThRQjJBQ2w1dnZDZU9Ua2g4Rlp6bjJPbGQrVytWMzJjWUFyNCtVMWRKbHdsClhjZUVBQUFCZmtZek9lWUFBQVFEQUVjd1JRSWdLcWJ1Tm1yZHJKQVRRWWQ0VzY1bmhYWHlldGNXOWpjbXhhR0EKc20zOXZhY0NJUURmaWc2Um5lNmhreHFQWEFhbzgvVkpsZ2F4WEUrczY5MjhVMlBoU2FMS0R3QjNBRzlUZHF3eAo4REVaMkprQXBGRVYvM2NWSEJIWkFzRUFLUWFOc2dpYU45a1RBQUFCZmtZek9pRUFBQVFEQUVnd1JnSWhBTjRZCitLRUFOVHQ5L2RCR1l2VUcxcUNsV2x0djBTV0hMS2xBbWVNUW43MWZBaUVBK2xSOVlGd0EyekhqeWxSd2h3QXIKMFNpdmkrb0N2djhVMHY4Y3kydlVsMGd3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUM0aWpjb0VscWNyRGVuRgprOXU2ait5QnBuODJaZVBhMmUyRUQ1N1JSek04ZGhZdlAzdUVCU2creTFSbkV3eGNRWnRseGx1UkJsd2t6TnZTCkVoS3MrS2d6WUYvRHIxcEx6QnpxeGZIUGwxRC9NYmpWM2RPZ2tqcVVlZytZVkEwdFFQUllUeGg0ZWg4SlIyNXcKd252K29uNTBHSXBpOWN3Tmc0eEppWHZEQTE0dTBaeHFheWlxV1BPTGJTTitxYzVCUnBuRXl5bm9xSnBlRDRSSAozM2llQjY0UGg3dE5qa09iaVM2bm5BSjRaKzdlKzV0RXQ1WWErckRiSnAxbjA4eVp2dkhxSUNnNnZOWXRtY2tRCktsaExQNDlyOS94cG9sZDBIVzVHdmtLc2N1T0NOeGNrbmJiRWtUZWhKRmJZbzZubitMak5oaFFlOFZBWGhhU3cKMHFwYXRZND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRkZqQ0NBdjZnQXdJQkFnSVJBSkVyQ0VyUERCaW5VL2JXTGlXblgxb3dEUVlKS29aSWh2Y05BUUVMQlFBdwpUekVMTUFrR0ExVUVCaE1DVlZNeEtUQW5CZ05WQkFvVElFbHVkR1Z5Ym1WMElGTmxZM1Z5YVhSNUlGSmxjMlZoCmNtTm9JRWR5YjNWd01SVXdFd1lEVlFRREV3eEpVMUpISUZKdmIzUWdXREV3SGhjTk1qQXdPVEEwTURBd01EQXcKV2hjTk1qVXdPVEUxTVRZd01EQXdXakF5TVFzd0NRWURWUVFHRXdKVlV6RVdNQlFHQTFVRUNoTU5UR1YwSjNNZwpSVzVqY25sd2RERUxNQWtHQTFVRUF4TUNVak13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUM3QWhVb3pQYWdsTk1QRXV5TlZaTEQrSUx4bWFaNlFvaW5YU2FxdFN1NXhVeXhyNDVyK1hYSW85Y1AKUjVRVVZUVlhqSjZvb2prWjlZSThRcWxPYnZVN3d5N2JqY0N3WFBOWk9PZnR6Mm53V2dzYnZzQ1VKQ1dIK2pkeApzeFBuSEt6aG0rL2I1RHRGVWtXV3FjRlR6alRJVXU2MXJ1MlAzbUJ3NHFWVXE3WnREcGVsUURScks5TzhadXRtCk5IejZhNHVQVnltWitEQVhYYnB5Yi91QnhhM1NobGc5RjhmbkNidnhLL2VHM01IYWNWM1VSdVBNclNYQmlMeGcKWjNWbXMvRVk5NkpjNWxQL09vaTJSNlgvRXhqcW1BbDNQNTFUK2M4QjVmV21jQmNVcjJPay81bXprNTNjVTZjRwova2lGSGFGcHJpVjF1eFBNVWdQMTdWR2hpOXNWQWdNQkFBR2pnZ0VJTUlJQkJEQU9CZ05WSFE4QkFmOEVCQU1DCkFZWXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0lHQ0NzR0FRVUZCd01CTUJJR0ExVWRFd0VCL3dRSU1BWUIKQWY4Q0FRQXdIUVlEVlIwT0JCWUVGQlF1c3hlM1dGYkxybEFKUU9ZZnI1MkxGTUxHTUI4R0ExVWRJd1FZTUJhQQpGSG0wV2VaN3R1WGtBWE9BQ0lqSUdsajI2WnR1TURJR0NDc0dBUVVGQndFQkJDWXdKREFpQmdnckJnRUZCUWN3CkFvWVdhSFIwY0RvdkwzZ3hMbWt1YkdWdVkzSXViM0puTHpBbkJnTlZIUjhFSURBZU1CeWdHcUFZaGhab2RIUncKT2k4dmVERXVZeTVzWlc1amNpNXZjbWN2TUNJR0ExVWRJQVFiTUJrd0NBWUdaNEVNQVFJQk1BMEdDeXNHQVFRQgpndDhUQVFFQk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQ0FRQ0Z5azVIUHFQM2hVU0Z2TlZuZUxLWVk2MTFUUjZXClBUTmxjbFF0Z2FEcXcrMzRJTDlmekxkd0FMZHVPL1plbE43a0lKK203NHV5QStlaXRSWThrYzYwN1RrQzUzd2wKaWtmbVpXNC9SdlRaOE02VUsrNVV6aEs4akNkTHVNR1lMNkt2elhHUlNnaTN5TGdqZXdRdENQa0lWejZEMlFRegpDa2NoZUFtQ0o4TXF5SnU1emx6eVpNakF2bm5BVDQ1dFJBeGVrcnN1OTRzUTRlZ2RSQ25iV1NEdFk3a2grQkltCmxKTlhvQjFsQk1FS0lxNFFEVU9Yb1JnZmZ1RGdoamUxV3JHOU1MK0hiaXNxL3lGT0d3WEQ5UmlYOEY2c3c2VzQKYXZBdXZEc3p1ZTVMM3N6ODVLK0VDNFkvd0ZWRE52Wm80VFlYYW82WjBmK2xRS2MwdDhEUVl6azFPWFZ1OHJwMgp5Sk1DNmFsTGJCZk9EQUxadllIN243ZG8xQVpsczRJOWQxUDRqbmtEclFveEIzVXFROWhWbDNMRUtRNzN4RjFPCnlLNUdoRERYOG9WZkdLRjV1K2RlY0lzSDRZYVR3N21QM0dGeEpTcXYzKzBsVUZKb2k1TGM1ZGExNDlwOTBJZHMKaENFeHJvTDErN21yeUlrWFBlRk01VGdPOXIwcnZaYUJGT3ZWMnowZ3AzNVowK0w0V1BsYnVFak4vbHhQRmluKwpIbFVqcjhnUnNJM3FmSk9RRnkvOXJLSUpSMFkvOE9td3QvOG9UV2d5MW1kZUhtbWprN2oxbllzdkM5SlNRNlp2Ck1sZGxUVEtCM3poVGhWMStYV1lwNnJqZDVKVzF6YlZXRWtMTnhFN0dKVGhFVUczc3pnQlZHUDdwU1dUVVRzcVgKbkxSYndIT29xN2hId2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlGWURDQ0JFaWdBd0lCQWdJUVFBRjNJVGZVNlVLNDduYXFQR1FLdHpBTkJna3Foa2lHOXcwQkFRc0ZBREEvCk1TUXdJZ1lEVlFRS0V4dEVhV2RwZEdGc0lGTnBaMjVoZEhWeVpTQlVjblZ6ZENCRGJ5NHhGekFWQmdOVkJBTVQKRGtSVFZDQlNiMjkwSUVOQklGZ3pNQjRYRFRJeE1ERXlNREU1TVRRd00xb1hEVEkwTURrek1ERTRNVFF3TTFvdwpUekVMTUFrR0ExVUVCaE1DVlZNeEtUQW5CZ05WQkFvVElFbHVkR1Z5Ym1WMElGTmxZM1Z5YVhSNUlGSmxjMlZoCmNtTm9JRWR5YjNWd01SVXdFd1lEVlFRREV3eEpVMUpISUZKdmIzUWdXREV3Z2dJaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUNEd0F3Z2dJS0FvSUNBUUN0NkNSejlCUTM4NXVlSzFjb0hJZSszTGZmT0pDTWJqem1WNkI0OTNYQwpvdjcxYW03MkFFOG8yOTVvaG14RWs3YXhZLzBVRW11L0g5THFNWnNoZnRFelBMcEk5ZDE1MzdPNC94THhJWnBMCndZcUdjV2xLWm1ac2ozNDhjTCt0S1NJRzgrVEE1b0N1NGt1UHQ1bCtsQU9mMDBlWGZKbElJMVBvT0s1UENtK0QKTHRGSlY0eUFkTGJhTDlBNGpYc0RjQ0ViZGZJd1BQcVBydDNhWTZ2ckZrL0NqaEZMZnM4TDZQKzFkeTcwc250Swo0RXdTSlF4d2pRTXBvT0ZUSk93VDJlNFp2eEN6U293L2lhTmhVZDZzaHdlVTlHTng3QzdpYjF1WWdlR0pYRFI1CmJIYnZPNUJpZWViYnBKb3ZKc1hRRU9FTzN0a1FqaGI3dC9lbzk4ZmxBZ2VZanpZSWxlZmlONVlOTm5XZSt3NXkKc1IyYnZBUDVTUVhZZ2QwRnRDcldRZW1zQVhhVkNnL1kzOVc5RWg4MUx5Z1hiTktZd2FnSlpIZHVSemU2enF4WgpYbWlkZjNMV2ljVUdRU2srV1Q3ZEp2VWt5UkduV3FOTVFCOUdvWm0xcHpwUmJvWTdubjF5cHhJRmVGbnRQbEY0CkZRc0RqNDNRTHdXeVBudEtIRXR6QlJMOHh1cmdVQk44UTVOMHM4cDA1NDRmQVFqUU1OUmJjVGEwQjdyQk1EQmMKU0xlQ081aW1mV0NLb3FNcGdzeTZ2WU1FRzZLREEwR2gxZ1h4RzhLMjhLaDhoanRHcUVncWlOeDJtbmEvSDJxbApQUm1QNnpqelpON0lLdzBLS1AvMzIrSVZRdFFpMENkZDRYbitHT2R3aUsxTzV0bUxPc2JkSjFGdS83eGs5VE5EClR3SURBUUFCbzRJQlJqQ0NBVUl3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFPQmdOVkhROEJBZjhFQkFNQ0FRWXcKU3dZSUt3WUJCUVVIQVFFRVB6QTlNRHNHQ0NzR0FRVUZCekFDaGk5b2RIUndPaTh2WVhCd2N5NXBaR1Z1ZEhKMQpjM1F1WTI5dEwzSnZiM1J6TDJSemRISnZiM1JqWVhnekxuQTNZekFmQmdOVkhTTUVHREFXZ0JURXA3R2tleXh4Cit0dmhTNUIxLzhRVllJV0pFREJVQmdOVkhTQUVUVEJMTUFnR0JtZUJEQUVDQVRBL0Jnc3JCZ0VFQVlMZkV3RUIKQVRBd01DNEdDQ3NHQVFVRkJ3SUJGaUpvZEhSd09pOHZZM0J6TG5KdmIzUXRlREV1YkdWMGMyVnVZM0o1Y0hRdQpiM0puTUR3R0ExVWRId1ExTURNd01hQXZvQzJHSzJoMGRIQTZMeTlqY213dWFXUmxiblJ5ZFhOMExtTnZiUzlFClUxUlNUMDlVUTBGWU0wTlNUQzVqY213d0hRWURWUjBPQkJZRUZIbTBXZVo3dHVYa0FYT0FDSWpJR2xqMjZadHUKTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBS2N3QnNsbTcvRGxMUXJ0Mk01MW9HclMrbzQ0Ky95UW9ERlZEQwo1V3hDdTIrYjlMUlB3a1NJQ0hYTTZ3ZWJGR0p1ZU43c0o3bzVYUFdpb1c1V2xIQVFVN0c3NUsvUW9zTXJBZFNXCjlNVWdOVFA1MkdFMjRIR050TGkxcW9KRmxjRHlxU01vNTlhaHkyY0kycUJETEtvYmt4L0ozdldyYVYwVDlWdUcKV0NMS1RWWGtjR2R0d2xmRlJqbEJ6NHBZZzFodG1mNVg2RFlPOEE0anF2MklsOURqWEE2VVNiVzFGelhTTHI5TwpoZThZNElXUzZ3WTdiQ2tqQ1dEY1JRSk1FaGc3NmZzTzN0eEUrRmlZcnVxOVJVV2hpRjFteXY0UTZXK0N5QkZDCkRmdnA3T09HQU42ZEVPTTQrcVI5c2Rqb1NZS0VCcHNyNkd0UEFRdzRkeTc1M2VjNQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2d0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktrd2dnU2xBZ0VBQW9JQkFRQzFMSlp6bTRuZlhDWjAKNXpUTng0RG9mRFBncTNhQWlhdCtiOTU3WUx2ZXlmcVlIcy9tcWtOaVZiQ2dOanF6b0RWMlJvakUyakxoYkRSOAo4Q3F3cVFzaDM2OUZRWjhNc05HdTlkdTNVak9Gc0Y2cittMFBscmt1VUl6VndQRlFCcGZ6aXI0bHRuYlora1FPClFIems2eFpJbG05cUVDN2NRT21HKzJnTFJ5ZmozQ0Ywc2FjVXVFem80MGVJb2RJUUpmTTkrYWIvK1d4Z2lTN3EKOGZBUUsySzd3aFAzR1dYM0VvTUxJbG00emFuUVAwR3o5UGtiWWxIWFR3Zm9Gdi9UYmNjQzhoc3hHbEFSa1ZFUQo4UzVnNHY4UGsxYUdydkdrYWJEV3V3SlZ0ejhGYklEVUZnQVBUNHg5YnJyNytoak14LzM5K3VIckt4WFJPZEJtClVsSzlnelNmQWdNQkFBRUNnZ0VCQUlPdDZaZ1RGMjFaVzdZaUNaWDdCKzF4d0g3dUFJNUNBWHcvTU5RNXBiS3kKMk1sUnM4ZXlQcEd0T0ZmcHNsYTEvY1YrVkkvSEM2NGQ2RFJhbHB5WjhMWnBEc25tZlFSTFM4dS9kRGRVcm8vZgpkWi9IdnhiU2RMdDkzaTdLTWxuNHdONUpIQlRxL28xRndjc2VBZWljR1RFZTdkR0grNWNvTXROaHpPaE5pbWVvCmNKb21BRkRrbkJpUk5TU2k3d3E1UHBNanpXUytrQm5VcHpaZ1I2T0N3NjJra1FnY2ZvWXgwRXlsM2xjNUdEVDkKdXNtblRiTjEvS3gvbExCN2sxcUY3anV4dHNjejZMQlNOcXoydVhwcGR3RkVPRlRqblMvUkNCNUJma1k4dW00dwo3Mk5xYjRFcW1xZGdGaUY5c3dCa0JaRTl1czd6Y0RvRElNQkk2MmNLT1lrQ2dZRUE1VEdaaXh0MjVaOGl0RDg4ClAvdk1XSUY0RW1uT2VTOGRxWmQ5d0FvejVUWUgzQXhMYVpkcDZxTDc2WGtodDlPLzRTWFRDcktRemJHQmppdXEKdUtmdFBtbHQ5NVFHVUpibUQ0MzBJVzdvRXRqdnpqV3BqTzRTNCtnenFoa2kvUlhjOE1WNWZiK05qc3NBUTFVMApYZWk5Ym1sZkkyRlVHQTR3TklRVXlwQ3lQYVVDZ1lFQXlsMDE3SkVBdGltR2l6blUvclF2RXpPNE91YVBCR2tjCmNsZm10MjE5L1ZzMElqWXRtVXc5TEk1R2dmcDcvZ2tLdEhnc0VpZndwa2N0SytuOFpPUFZKUHlaYjNmNjZvWG0KN0R3V1A3WVpQNVBjeEZPazRtcnlDU2Z3dlZ1ZkxpQkhLb1dFSHMwRGQvVzhvVnY0MS9NbmJWZ1FXbG1oUUYxYwp2SWFhVVZSTEhmTUNnWUVBMWNaVnVQSjlDK0JLdG1UbEJha1BDTjU1NkhMWUt5QlBRb2dTdXJUSmd0bktxdXlzCnltaDRXbXA3SFdIbW1WZmdlVmlXYUR2MTVHWFV1WTd4UmhzYnBrTWdWdlN5anlpd25ZR0NYRXplR2ZaT2RzQ0cKelBTaW1nRlRieXpTL2MwT3IyVUIxTkIrY05uWC9QWFVTbU56alRDcmxJeUxxNFJRWWl0d1dTQnRvQ0VDZ1lCWgpUZzFRR3lYUFBrQXNEUmVjVi9RMmF5cXdnN00xNVJVeXVPd09vdmxvNStqMytDVGpkQ3ZERC82NXVjc2lidWNVCmdid2hQeE1Lcm5xVzJLb1Q5Qi9LTk5lWnc3OHQ1RzNtYnhYNmcraGNrR3ByRWViQUxTWW5PRU1icmVWdnU3cnMKWHdQUmUvUTk2bXFXWXpwTVF2aHhYdDNJb2FseCtFSEd5VGd0RUNBZVZRS0JnUUMvc1p5QVZQL2YzVHNNOVBnNgpvQWJjanc3bml4VXoyV0UwUEVkUXlIUlhIdmltZWRQQjdoWUtUeUxsL3JIaTExc2tRakh5Q1E2OEpISWxCK3VLCkZWaUdRRThsUnI3cXYwQ3pLbEd0QTUzVFJYNzNCbUg5NWx1SmtrU1UxSnJvU2RpVmZWUVFvdVVXUjFpU1VaY3MKTGluSm0vMlh0QlJWbEE5K0YzQ3hEYVJqVGc9PQotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  name: tls
  namespace: #@ data.values.tls.namespace
type: kubernetes.io/tls
---
apiVersion: projectcontour.io/v1
kind: TLSCertificateDelegation
metadata:
  name: contour-delegation
  namespace: #@ data.values.tls.namespace
  annotations:
    kapp.k14s.io/change-rule: "upsert after upserting tap-install/tap"
spec:
  delegations:
    - secretName: #@ data.values.tls.secretName
      targetNamespaces:
        - "*"
---
#!apiVersion: projectcontour.io/v1
#!kind: HTTPProxy
#!  metadata:
#!    name: tap-gui
#!    namespace: tap-gui
#!spec:
#!  virtualhost:
#!    fqdn: #@ "tap-gui.{}".format(data.values.domain)
#!    tls:
#!      secretName: #@ "{}/{}".format(data.values.tls.namespace,data.values.tls.secretName)
#!  routes:
#!    - services:
#!       - name: server
#!          port: 7000
#!
#!---
#!apiVersion: projectcontour.io/v1
#!kind: HTTPProxy
#!metadata:
#!  name: app-live-view
#!  namespace: app-live-view
#!  annotations:
#!    kapp.k14s.io/change-rule: "upsert after upserting tap-install/tap"
#!spec:
#!  virtualhost:
#!    fqdn: #@ "app-live-view.{}".format(data.values.domain)
#!    tls:
#!      secretName: #@ "{}/{}".format(data.values.tls.namespace,data.values.tls.secretName)
#!  routes:
#!    - services:
#!        - name: application-live-view-5112
#!          port: 80

#!---
apiVersion: projectcontour.io/v1
kind: HTTPProxy
metadata:
  name: accelerator
  namespace: accelerator-system
  annotations:
    kapp.k14s.io/change-rule: "upsert after upserting tap-install/tap"
spec:
  virtualhost:
    fqdn: #@ "accelerator.{}".format(data.values.domain)
    tls:
      secretName: #@ "{}/{}".format(data.values.tls.namespace,data.values.tls.secretName)
  routes:
    - services:
        - name: acc-server
          port: 80

---
apiVersion: projectcontour.io/v1
kind: HTTPProxy
metadata:
  annotations:
    projectcontour.io/ingress.class: contour-external
    kapp.k14s.io/change-rule: "upsert after upserting tap-install/tap"
  labels:
    projectcontour.io/ingress.class: contour-external
  name: api-portal-external
  namespace: api-portal
spec:
  routes:
    - conditions:
        - prefix: /
      services:
        - name: api-portal-server
          port: 8080
  virtualhost:
    fqdn: #@ "api-portal.{}".format(data.values.domain)
    tls:
      secretName: #@ "{}/{}".format(data.values.tls.namespace,data.values.tls.secretName)

---
---
apiVersion: projectcontour.io/v1
kind: HTTPProxy
metadata:
  name: learningcenter
  namespace: learning-center-guided-ui
  annotations:
    kapp.k14s.io/change-rule: "upsert after upserting tap-install/tap"
spec:
  virtualhost:
    fqdn: #@ "learningcenter.{}".format(data.values.domain)
    tls:
      secretName: #@ "{}/{}".format(data.values.tls.namespace,data.values.tls.secretName)
  routes:
    - services:
        - name: learningcenter-portal
          port: 8080

---